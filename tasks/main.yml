---
- name: Include OS specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}{{ ansible_distribution_major_version }}.yml"

- name: Determine latest release of laurel
  ansible.builtin.shell: "curl -s https://github.com/threathunters-io/laurel/releases | grep -Po 'Release\\sv[^<]+' | cut -d ' ' -f2 | uniq | head -1"
  register: laurel_latest
  changed_when: no

- name: Setting laurel version
  ansible.builtin.set_fact:
    laurel_version: "{{ laurel_latest.stdout }}"

- name: Create temporary install directory
  ansible.builtin.file:
    path: /tmp/laurel
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Create laurel system account
  ansible.builtin.user:
    name: _laurel
    comment: 'Laurel Auditing'
    home: /var/log/laurel
    create_home: yes
    system: yes
    state: present

- name: "Download and unarchive laurel release version {{ laurel_version }}"
  ansible.builtin.unarchive:
    src: 'https://github.com/threathunters-io/laurel/releases/download/{{ laurel_version }}/laurel-{{ laurel_version }}-x86_64-musl.tar.gz'
    dest: /tmp/laurel
    remote_src: yes

- name: Copy laurel binary to /usr/local/sbin/
  ansible.builtin.copy:
    src: /tmp/laurel/laurel
    dest: /usr/local/sbin/
    remote_src: yes
    mode: '0755'
    owner: root
    group: root
  register: laurel_installed

- name: Create laural configuration directory
  ansible.builtin.file:
    path: /etc/laurel
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Install laurel configuration
  ansible.builtin.copy:
    src: config.toml
    dest: /etc/laurel/
    mode: '0644'
    owner: root
    group: root

- name: Install audispd-plugins
  ansible.builtin.package:
    name: audispd-plugins
    state: present

- name: Enable laurel via Audispd
  ansible.builtin.copy:
    src: laurel.conf
    dest: "{{ audisp_plugins_dir }}"
    mode: '0640'
    owner: root
    group: root

- name: SELinux Configuartion
  block:
  - name: Copy laurel selinux policy
    ansible.builtin.copy:
      src: laurel.pp
      dest: /tmp/
      mode: '0644'
      owner: root
      group: root

  - name: Install laurel selinux policy
    ansible.builtin.command: semodule -i /tmp/laurel.pp
    register: selinux
    failed_when: selinux.rc != 0
    changed_when: no

  - name: Set laurel selinux context
    ansible.builtin.command: restorecon -v -R -F /usr/local/sbin/laurel /etc/laurel /var/log/laurel
    register: restorcon
    failed_when: restorcon.rc != 0
    changed_when: no
  when: selinux_enabled | bool

- name: Reboot Host
  ansible.builtin.reboot:
  when: laurel_installed is changed
